apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: my-release
      meta.helm.sh/release-namespace: default
    labels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: jenkins
      helm.sh/chart: jenkins-10.0.4
    name: my-release-jenkins
    namespace: default
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: jenkins
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/secrets: 5ed2486fa89beee122abc791dcbcca1c223f008803acd5cf7035f5d80813fcc5
        creationTimestamp: null
        labels:
          app.kubernetes.io/instance: my-release
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: jenkins
          helm.sh/chart: jenkins-10.0.4
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: my-release
                    app.kubernetes.io/name: jenkins
                namespaces:
                - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        containers:
        - env:
          - name: JENKINS_USERNAME
            value: user
          - name: JENKINS_PASSWORD
            valueFrom:
              secretKeyRef:
                key: jenkins-password
                name: my-release-jenkins
          - name: JENKINS_HOME
            value: /bitnami/jenkins/home
          - name: DISABLE_JENKINS_INITIALIZATION
            value: "no"
          - name: JENKINS_HOST
          - name: JENKINS_EXTERNAL_HTTP_PORT_NUMBER
            value: "80"
          - name: JENKINS_EXTERNAL_HTTPS_PORT_NUMBER
            value: "443"
          image: docker.io/bitnami/jenkins:2.332.2-debian-10-r1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /login
              port: http
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: jenkins
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            requests:
              cpu: 300m
              memory: 512Mi
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /bitnami/jenkins
            name: jenkins-data
          - mountPath: /var/run/secrets/kubernetes.io/mongodb-cs
            name: mongodb-cs
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          fsGroup: 1001
        serviceAccount: default
        serviceAccountName: default
        terminationGracePeriodSeconds: 30
        volumes:
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: my-release-jenkins
        - name: mongodb-cs
          secret:
            secretName: db-connection-string
kind: List
metadata:
